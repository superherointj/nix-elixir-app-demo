[[ -d ".direnv" ]] || mkdir .direnv

[[ -z $IN_NIX_SHELL ]] && use flake "$(git rev-parse --show-toplevel)#hello"

# Auto-Setup Project (Exception POSTGRES DATABASE)

LOCAL_PATH=$(cd $(dirname ${BASH_SOURCE[0]}); pwd -P)/
export NIX_SHELL_DIR=$LOCAL_PATH/.nix-shell
test -d $NIX_SHELL_DIR && mkdir -p $NIX_SHELL_DIR
export MIX_HOME="$NIX_SHELL_DIR/.mix"
export MIX_ARCHIVES="$MIX_HOME/archives"
export HEX_HOME="$NIX_SHELL_DIR/.hex"

export BUILD_ENV=dev
export MIX_ENV=dev

if ! test -d $MIX_HOME; then
  # Install Hex and Phoenix
  yes | mix local.hex
  yes | mix local.rebar
  yes | mix archive.install hex phx_new
  # yes | mix archive.install hex phoenix
  yes | mix local.phx

  if ! test -e mix.exs; then
    echo "Error: mix.exs is missing!"
  else
    # Will just prepare environment

    # Postgres: Should be made available here. But I'm assuming host will be running postgres already. So it won't set it up here.
    mix deps.get

    # `ecto.setup` is defined in `mix.exs` by default when
    # Phoenix  project  is  generated via  `mix  phx.new`.
    # It  does  `ecto.create`, `ecto.migrate`,  and run `priv/seeds`.
    # mix ecto.setup
  fi
fi

# Load local env vars.
[[ -e "env.list" ]] && eval "source env.list"
